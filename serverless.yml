service: e-commerce-api
frameworkVersion: "4"

package:
  individually: true

provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  environment:
    USER_POOL_CLIENT_ID:
      Fn::GetAtt:
        - userPoolClient
        - ClientId
    USER_POOL_ID:
      Ref: userPool
  logRetentionInDays: 30
  httpApi:
    metrics: true
    cors: true
    authorizers:
      jwtAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::GetAtt:
            - userPool
            - ProviderURL
        audience:
          - Ref: userPoolClient
  #iam: ${file(iam.yml)}

plugins:
  - serverless-esbuild

build:
  esbuild: false

functions:
  #users
  signUp:
    handler: src/user/web/signup.handler
    events:
      - httpApi:
          method: POST
          path: /auth/register

  confirmSignUp:
    handler: src/user/web/confirm.handler
    events:
      - httpApi:
          method: POST
          path: /auth/confirm

  login:
    handler: src/user/web/login.handler
    events:
      - httpApi:
          method: POST
          path: /auth/login

  refresh:
    handler: src/user/web/refresh.handler
    events:
      - httpApi:
          method: POST
          path: /auth/refresh

  createProduct:
    handler: src/product/web/create_product.handler
    events:
      - httpApi:
          method: POST
          path: /product
          authorizer:
            name: jwtAuthorizer

  getProduct:
    handler: src/product/web/get_product.handler
    events:
      - httpApi:
          method: GET
          path: /product

  updateProduct:
    handler: src/product/web/update_product.handler
    events:
      - httpApi:
          method: PATCH
          path: /product/{id}
          authorizer:
            name: jwtAuthorizer

  searchProducts:
    handler: src/product/web/search_products.handler
    events:
      - httpApi:
          method: POST
          path: /product/search

  #cart
  # getCart:
  #   handler: src/cart/get_cart.handler
  #   events:
  #     - httpApi:
  #         method: GET
  #         path: /cart/{id}
  #         authorizer:
  #           name: jwtAuthorizer

  # updateCart:
  #   handler: src/cart/update_cart.handler
  #   events:
  #     - httpApi:
  #         method: PATCH
  #         path: /cart
  #         authorizer:
  #           name: jwtAuthorizer

  # #checkout
  # checkout:
  #   handler: src/checkout/checkout.handler
  #   events:
  #     - httpApi:
  #         path: /checkout
  #         method: POST
  #          authorizer:
  #            name: jwtAuthorizer

resources: ${file(resources.yml)}
