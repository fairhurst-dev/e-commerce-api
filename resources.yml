Resources:
  userPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: ${self:service}-${sls:stage}-user-pool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      Schema:
        - Name: email
          Required: true
          Mutable: true
      MfaConfiguration: OFF
      EmailVerificationMessage: "Your verification code is {####}"
      EmailVerificationSubject: "Verify your email"
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      UsernameConfiguration:
        CaseSensitive: false
  userPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: ${self:service}-${sls:stage}-user-pool-client
      UserPoolId:
        Ref: userPool
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false
  AdminGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Admin
      UserPoolId:
        Ref: userPool
  eCommerceTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ${self:service}-${sls:stage}
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: "GSI1"
          KeySchema:
            - AttributeName: "SK"
              KeyType: "HASH"
            - AttributeName: "PK"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  productsSearchDomain:
    Type: AWS::OpenSearchService::Domain
    Properties:
      DomainName: ${self:service}-${sls:stage}
      EngineVersion: "OpenSearch_2.11"
      ClusterConfig:
        DedicatedMasterEnabled: false
        InstanceType: t3.small.search
        InstanceCount: 1
      EBSOptions:
        EBSEnabled: true
        VolumeSize: "10"
        VolumeType: "gp3"
        Iops: 3000
        Throughput: 125
      AccessPolicies:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${aws:accountId}:role/${self:service}-${sls:stage}-${aws:region}-lambdaRole"
            Action: "es:*"
            Resource: !Sub "arn:aws:es:${aws:region}:${aws:accountId}:domain/${self:service}-${sls:stage}/*"
